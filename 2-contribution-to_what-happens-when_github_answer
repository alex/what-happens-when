# From DNS to Databases: A Comprehensive Overview of Website Architecture

This article aims to explore the process that occurs when a user searches for a URL, like https://www.google.com, in a web browser such as Chrome. Though this task takes only a few seconds to complete, it is actually a complex process.
To understand the process, it's important to know some key concepts so let us first define some key terms related to this topic:
** A web page ** is a document that can be displayed in a web browser.
** A website ** is a collection of web pages that are grouped together and connected in various ways.
** Web servers ** are computers or computer programs that host websites on the internet. These servers store and deliver content (files), such as web pages, to clients, usually web browsers, over the internet or an intranet.
There are different types of servers, such as web servers and application servers.
Application servers interact with end-user clients and server-side application code to generate and deliver dynamic content.
** A client ** refers to a computer program or device that requests services or resources from a server. A client can be any device, such as a personal computer, smartphone, or tablet, that communicates with a server to access data or perform a function. In the context of the internet, a web browser is a type of client that requests web pages and resources from web servers, while other types of clients may request data from database servers or application servers.
** Hypertext Transfer Protocol (HTTP) ** is the language used by clients and servers to communicate with each other. The Internet Protocol (IP) address is a unique identifier assigned by the Internet Assigned Numbers Authority (IANA) to each device on the internet. https://iana.org/
** The Domain Name System (DNS) ** acts as an address book for websites, helping browsers find the website's IP address.
** Transmission Control Protocol and Internet Protocol (TCP/IP) ** are communication protocols that define how data travels across the internet. The OSI (Open Systems Interconnection) model is a conceptual and logical model that describes the universal standard of communication functions of a telecommunication system. TCP/IP is part of the transport layer (layer 4) in the OSI model.
** An IP address ** , short for Internet Protocol address, is a unique numerical identifier assigned to each device connected to the Internet. It enables devices to communicate with each other and exchange data across the internet. IP addresses come in two versions: IPv4 and IPv6. IPv4 addresses are a series of four numbers separated by periods, such as 192.168.0.1, while IPv6 addresses are longer and consist of eight groups of alphanumeric characters separated by colons, such as 2001:0db8:85a3:0000:0000:8a2e:0370:7334. When you type a web address into your browser, the browser uses the IP address to locate and connect to the server that hosts the website you are trying to access.
** A firewall ** is a network security system that limits access to computers and networks based on preconfigured rules in hardware or software.
** Secure Sockets Layer (SSL) ** is a protocol that secures communication between the browser and the website. An SSL certificate indicates that the webpage is secure.
** Load Balancers ** distribute incoming traffic across multiple servers, increasing efficiency, reliability, and availability of the website.
Finally, ** databases ** are used for storing, maintaining, and accessing any sort of data.
Now The actual process
1. DNS request
When you type a website address like www.google.com into your browser and press enter, the first thing that happens is a DNS request. This request is sent to translate the human-readable website address into an IP address, which is a numerical identifier that computers use to communicate with each other. The IP address is what your browser needs to connect to the server hosting the website. The DNS request is usually sent to your Internet Service Provider's (ISP) DNS server like MTN Ghana or Vodafone Ghana in the case of Ghana or a public DNS server like Google's DNS server (8.8.8.8). The DNS server will search its database of domain names and IP addresses to find a match and then send the IP address back to your browser. This process is the first and most essential step to connecting to websites and ensuring that users can easily access content on the internet.
2. TCP/IP
After retrieving the IP address from the DNS, the next step is to establish a TCP connection between the browser (client) and the web server. TCP is an essential protocol responsible for dividing the data into smaller packets to ensure efficient transmission over the internet. TCP also guarantees that these packets are received and assembled in the correct order at the destination, preventing any loss of data during the transfer. The Internet Protocol (IP) takes care of routing the packets between the networks, using the unique IP address to identify and deliver the packets to their intended destination. This process ensures that the website content is transmitted efficiently and reliably, resulting in a seamless browsing experience for the user.
3. Firewall
Before a connection can be established between a client's computer and the web server hosting a website, the client's request goes through a firewall. The firewall is responsible for preventing any malicious traffic that may harm the network from getting through. To achieve this, the firewall may block certain ports or IP addresses based on the rules set by the network administrator. In this way, the firewall acts as a filter that only allows authorized traffic to pass through to the web server.
4. HTTPS/SSL
Once the TCP connection is established between your browser and the web server, your browser sends an HTTPS request to the server. HTTPS is a more secure version of HTTP, and it uses either SSL or TLS (Transport Layer Security) to encrypt the data being transmitted between your browser and the web server. This encryption makes it difficult for third parties to intercept and read the data. SSL and TLS use a combination of public and private keys to create a secure connection between your browser and the web server, allowing for safe and secure transmission of sensitive information, such as login credentials or credit card numbers.
5. Load-balancer
As websites become more popular and attract more users, it becomes increasingly important to ensure that they remain accessible and responsive. To achieve this, large websites like Google often use multiple servers to distribute the incoming traffic. A load balancer is a device that is responsible for distributing the traffic to the servers based on various factors like the server's current load, availability, and the location of the user. This ensures that the load is evenly distributed among the servers, and if one server fails or becomes overloaded, the traffic can be redirected to other available servers, thus ensuring the website remains accessible and responsive to users.
6. Web server
After receiving an HTTPS request from the client's browser, the web server retrieves the requested web page and sends it back to the client. The web server can also use application server or database to retrieve relevant data to generate a dynamic web page before sending it back to the client. This process occurs rapidly, and users receive the web page they requested in a matter of seconds. The speed and efficiency of the web server, as well as the resources used to generate dynamic content, can affect the overall performance of the website.
7. Application server
For websites that require dynamic content, an application server may be used to handle the application logic and interact with the database to generate the content that is sent back to the user's browser. It sits between the web server and the database server, and its primary purpose is to process requests, run the necessary code, and generate the response. The application server can be configured to handle a wide range of tasks, such as user authentication, database queries, and session management. It can also run scripts written in various programming languages such as PHP, Python, Ruby, or Java. The response generated by the application server is sent back to the web server, which in turn sends it to the user's browser.
8. Database
Databases are a vital component of modern web applications and are used to store a website's data. A database management system (DBMS) is responsible for handling queries and data retrieval. There are different types of DBMS, including relational databases, NoSQL databases, and graph databases, each with its own strengths and weaknesses. The application server communicates with the database using a database driver, which allows the application to execute queries and retrieve data. Depending on the type of database and the complexity of the website, the application server may need to handle large volumes of data and perform complex data operations. As such, database optimization and tuning are crucial to ensure that the website is fast and responsive.
In summary, when you type a URL like https://www.google.com into your browser, the process of accessing the website involves several complex steps. First, a DNS request is sent to translate the human-readable domain name into an IP address. Once the IP address is obtained, a TCP connection is established between your browser and the web server that hosts the website. The connection is then secured with HTTPS/SSL encryption to ensure that data transmitted between the browser and server is protected from third-party interception.
Next, the request is filtered through a firewall to block any potentially harmful traffic before reaching the server. If the website receives a large amount of traffic, load-balancers are used to distribute it across multiple servers and prevent overloading. Once the request reaches the web server, it may communicate with an application server to generate dynamic content based on the user's request. Finally, the data may be retrieved from a database before being sent back to the user's browser.
Understanding these processes is essential for web developers, system administrators, and anyone interested in how the internet works. If you find this post valuable, please like and share, lol.

** Sources **

[Link](https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_web_server)
[Link](https://iana.org/)
[Link](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works)
[Link](https://www.tutorialspoint.com/internet_technologies/web_servers.htm)
[Link(https://www.nginx.com/resources/glossary/web-server/)
[Link](https://en.wikipedia.org/wiki/Web_server)
[Link](https://www.imperva.com/learn/application-security/osi-model/)