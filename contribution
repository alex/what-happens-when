When you type “https://www.google.com" into your browser and press Enter, a series of many different processes begin to take place to ensure that you are able to access the website successfully. In this blog post, I will share with you the step-by-step journey your request takes to reach Google’s server and display the website.

DNS Request The first step in this process is the Domain Name System (DNS) request. Your browser needs to know the IP address of the server that hosts the Google website. It sends a DNS request to the DNS server, which translates the URL you typed (www.google.com) into an IP address (for example, 216.58.194.174).
TCP/IP Next, the browser establishes a Transmission Control Protocol (TCP) connection with the server. The TCP protocol ensures reliable, ordered, and error-checked delivery of data between applications running on different hosts. Internet Protocol (IP) is then used to route the packets of data between the client and server.
Firewall Once the TCP/IP connection is established, the request passes through a firewall. The firewall checks to see if the incoming traffic is authorized based on the predefined set of security rules. If the request is legitimate, the firewall allows the request to proceed to the next stage.
HTTPS/SSL When your browser connects to a website, it uses the HTTPS protocol to establish a secure connection. HTTPS stands for Hypertext Transfer Protocol Secure and is a combination of the standard HTTP protocol and the SSL/TLS encryption protocol. SSL/TLS ensures that all data transmitted between the browser and the web server is encrypted and cannot be read by third parties.
Load-balancer The request then goes through a load balancer, which distributes the request across multiple servers to ensure the fastest response time and prevent overload on any one server. Load balancers can also perform additional tasks such as SSL/TLS termination, content caching, and compression.
Web Server The load balancer then forwards the request to a web server, which is responsible for processing the request and returning a response. The web server retrieves the requested resources from the file system or a database, formats the response, and sends it back to the load balancer.
Application Server If the request requires dynamic content, the load balancer forwards the request to an application server, which runs the code necessary to generate the dynamic content. The application server interacts with the web server and any relevant databases to generate the requested content.
Database If the request requires data from a database, the application server sends a request to the database server. The database server retrieves the requested data, formats it, and sends it back to the application server. The application server then formats the data into the required response and sends it back to the web server, which sends it back to the load balancer, and finally to your browser.
In conclusion, when you type “https://www.google.com" into your browser and press Enter, your request goes through several stages, from DNS resolution to load balancing and dynamic content generation, to finally display the Google website on your screen. All of these processes happen in a matter of seconds, enabling you to access the vast resources of the internet with just a few clicks.
